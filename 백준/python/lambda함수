lambda함수는 익명함수로 메모리를 절약하는 이점이 있다.

일반적인 함수는 객체를 만들고 재사용을 위해 함수 이름(메모리)를 할당을 한다.


왜 사용할까?

익명함수이기 때문에 한번쓰이고 다음줄로 넘어가면 가비지 컬렉터에서 메모리환원


sum = lambda a, b: a+b

여기서는 lambda함수의 레퍼런스값이 sum에 저장되어 있기 때문에 사라지지 않는다.

함수 내부 람다는 함수가 종료되는 순간 메모리에서 증발


게으른 연산 - 필요할때만 가져다 쓰는것 (iterator 객체)

map 함수

